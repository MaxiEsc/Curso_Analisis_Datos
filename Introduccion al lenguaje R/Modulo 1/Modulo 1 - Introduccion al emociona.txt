Modulo 1 - Introduccion al emocionante mundo de la programacion

Video: Introduccion al mundo de la programacion

Has recorrido un largo camino desde el comienzo de tu proceso de aprendizaje. Felicitaciones por tus logros. Piensa en todas las habilidades que aprendiste en tu camino. 

-> Ahora sabes cómo utilizar el pensamiento estructurado para definir un problema y hacer las preguntas correctas; 
-> Trabajar con hojas de cálculo, bases de datos y herramientas como SQL para organizar y transformar los datos; 
-> Limpiar tus datos para asegurarte de su integridad antes de analizarlos; 
-> Crear elementos visuales para ilustrar puntos clave; 
-> Elaborar una historia convincente para comunicar las conclusiones a los interesados. 

Esa es una lista impresionante de habilidades, pero aún no terminamos. Tu conjunto de habilidades está a punto de crecer. En este curso, aprenderás sobre un concepto nuevo denominado programación y cómo puedes usar el lenguaje de programación R para analizar tus datos. Por ahora, sabes que el proceso de análisis de datos incluye seis etapas: preguntar, preparar, procesar, analizar, compartir y actuar. Ahora aprenderemos todo sobre el lenguaje de programación R y cómo puede ayudarte en cada etapa del proceso. Cuando termines, se te presentará un caso práctico opcional. Ese caso práctico te dará la oportunidad de resolver un problema de análisis de datos y poner en práctica todas las habilidades que aprendiste en el programa. Más adelante tendrás más información sobre ese proyecto. Hablemos sobre programación informática. 

La programación informática consiste en darle instrucciones a una computadora para que realice una acción o un conjunto de acciones. 

Puedes usar diferentes lenguajes de programación para escribir esas instrucciones. Podrías elegir un lenguaje específico según el proyecto que quieras llevar a cabo o el problema que quieras resolver. El lenguaje de programación R es muy útil para organizar, limpiar y analizar datos. Si esta es tu primera experiencia en programación informática, bienvenido. Cuando comencé a aprender sobre análisis de datos, tampoco tenía antecedentes en programación. De hecho, antes de enamorarme de los datos, había estudiado para ser cantante de ópera. También tengo un montón de amigos que se pasaron a este campo desde las artes y aprendieron sobre programación mucho más tarde en sus carreras. R es un excelente lugar para comenzar. Aprender R por primera vez puede ser desafiante e incluso más inspirador. Muchas de las habilidades que aprendiste en el programa te ayudarán a aprender los conceptos básicos de programación. Tómate tu tiempo y avanza a tu propio ritmo. Al igual que en los vídeos anteriores, comenzarás por lo básico y avanzarás a partir de allí. Ya te enfrentaste a desafíos difíciles y siempre triunfaste. Puedes hacerlo. Permíteme presentarme. Mi nombre es Carrie. Trabajo como directora de investigación de Google. Lidero un equipo que investiga la mejor manera de mejorar el rendimiento de las personas en las organizaciones. Es decir, ayudo a las personas a trabajar mejor y de manera más inteligente, y ayudo a las organizaciones a funcionar de manera más saludable y productiva. Aprendí R por primera vez cuando era analista de datos júnior, mientras estaba trabajando en un proyecto de varios años sobre trabajo virtual. Estábamos mirando datos sobre las experiencias de trabajo virtual de las personas y estábamos intentando comprender cómo trabajar de manera remota impacta en el rendimiento. Era un proyecto complejo con muchos datos para examinar. Siempre había problemas y yo buscaba la forma de hacer las cosas mejor y más rápido. Fue entonces cuando descubrí el poder de R. Cuando me atascaba, aprendía un poco más sobre R y descubría la solución a mi problema. Pronto entendí que R podía ayudarme a hacer casi cualquier cosa que involucrara datos mucho mejor y más rápido de lo que yo creía posible. Por suerte, hay muchos recursos excelentes en línea para R, así como una comunidad en línea muy solidaria. Cuando tenía una pregunta, me conectaba y encontraba la respuesta. A medida que el proyecto avanzaba, pude aprender cada vez más y convertirme en una analista de datos mucho más efectiva. Incluso mis compañeros de equipo comenzaron a pedirme consejos sobre R. Darme cuenta de que podía continuar aprendiendo mis habilidades en cualquier etapa de mi carrera fue una experiencia motivadora. Aprender R desbloqueó mi capacidad para analizar datos al máximo nivel. En tu futura carrera como analista de datos, tendrás la oportunidad de seguir aprendiendo y creciendo de modo continuo. Para mí, ese sería uno de los aspectos más geniales del trabajo. Aprender R es una de las partes más gratificantes de ese proceso de crecimiento. Todavía sigo aprendiendo nuevas formas de usar R. Además, puedes aplicar esas habilidades en otros lenguajes de programación, por ejemplo, Python, Julia o JavaScript. No hay límites respecto a qué tan lejos puedes llegar con la programación. Incluso va más allá del análisis de datos. Después de aprender R, comencé a pensar en todos los tipos de proyectos para los que podría usar la programación, tanto en el trabajo como por diversión. Te abre un nuevo mundo de posibilidades. Ahora hablemos sobre lo que vas a aprender. Comenzaremos con una introducción a los lenguajes de programación. Luego, analizaremos R más en detalle y exploraremos sus características y funciones principales. También veremos algunos conceptos básicos de programación y aprenderemos a utilizarlos de manera efectiva en R. A continuación, aprenderemos a trabajar con los datos en R. Descubrirás cómo R puede revolucionar tus habilidades de análisis de datos y permitirte limpiar, transformar, visualizar e informar tus datos de maneras nuevas y más poderosas. Aprender R te ayudará a llevar tu análisis de datos al siguiente nivel. También se verá muy bien en tu currículum. R está ampliamente reconocido como una credencial clave en puestos laborales de nivel básico. Saber cómo utilizar R te dará un gran impulso en tu búsqueda laboral y te ayudará a destacar como un analista nuevo. A continuación, hablaremos más sobre lenguajes de programación en general y cómo pueden ayudarte a analizar tus datos. Luego, pasaremos directamente a R. Y, antes de que te des cuenta, estarás usando R para impulsar tu análisis de datos.

<----------------------------------------------------------------------------------------------------------------------->

Debate: R versus Python

Por lo general, las personas se preguntan qué lenguaje de programación deberían aprender primero. Quizá tú también lo estés pensando. Este certificado te enseña el lenguaje de programación de código abierto, R. Es un excelente punto de partida para el análisis de datos de nivel básico y ofrece paquetes útiles para que los principiantes utilicen en sus proyectos. El plan de estudios no abarca Python, pero te aconsejamos que lo explores después de obtener este certificado. Si te gustaría aprender otros lenguajes de programación, no dudes en seguir capacitándote.

Para un principiante, todo lenguaje tiene algunas ventajas y, también, algunos desafíos. Pongámoslo en contexto: examinemos R y Python. La tabla a continuación constituye un resumen detallado según una muestra de artículos y opiniones de quienes trabajan en el sector. Puedes repasar la información sin tener que elegir un bando, ni R ni Python. De hecho, si consultas nuestra entrada del blog sobre RStudio, que puedes encontrar en la sección de Recursos adicionales, verás que se trata más de complementar ambos que de elegir uno. 


Lenguajes

Funciones en común
	
R

- De código abierto - Los datos se almacenan en marcos de datos - Las fórmulas y las funciones ya están disponibles - Existe una comunidad para desarrollar códigos y brindarte ayuda
	
Python

- De código abierto - Los datos se almacenan en marcos de datos - Las fórmulas y las funciones ya están disponibles - Existe una comunidad para desarrollar códigos y brindarte ayuda

Ventajas únicas

R	

- Manipulación de datos, visualización de datos y paquetes estadísticos - Enfoque de "bisturí" respecto de los datos: Encuentra paquetes para hacer lo que quieres con los datos
	
Python

- Sintaxis simple para las necesidades de aprendizaje automático - Se integra con plataformas en la nube, como Google Cloud, Amazon Web Services y Azure

Desafíos únicos

R	

- Las distintas convenciones de nomenclatura hace que sea difícil para los principiantes elegir las funciones correctas - Los métodos para manejar variables pueden ser algo difíciles de entender para los principiantes
	
Python

- Los principiantes tienen muchas más decisiones por tomar respecto de la entrada y salida de datos, la estructura, las variables, los paquetes y los objetos - "Enfoque de 'navaja Suiza' respecto de los datos": Descubre cómo hacer lo que quieres con los datos

Conclusiones clave

Ciertos aspectos hacen que algunos lenguajes de programación sean más fáciles de aprender que otros. Pero eso no significa que los lenguajes más difíciles sean imposibles de aprender para los principiantes. Por otra parte, la popularidad de ciertos lenguajes de programación no necesariamente indica que son los mejores para los principiantes. 

Los profesionales que tienen un enfoque estadístico u orientado a la investigación a la hora de resolver problemas, por ejemplo, científicos, estadísticos e ingenieros, usan R. Los profesionales que buscan soluciones en los datos mismos y los que tienen que minar datos enormemente para encontrar respuestas, como los científicos de datos, los especialistas en aprendizaje automático y los desarrolladores de software, usan Python.

A medida que crezcas como profesional del análisis computacional de datos, es posible que tengas que aprender otros lenguajes de programación. Las habilidades y las competencias que aprendes en tu primera experiencia programando son una buena base. Por eso, este curso se centra en los elementos básicos de R. Así, podrás tener la perspectiva correcta: No importa tu puesto en la empresa, los lenguajes de programación juegan un rol importante en el proceso de análisis de datos.

¿La buena noticia? Podrás usar muchos de los conceptos y principios de programación que aprendas usando R en este curso en otros lenguajes de programación a futuro. También aprenderás a escribir código en R en un entorno de desarrollo integrado (IDE), llamado RStudio. RStudio te permite gestionar proyectos que usan R o Python, o incluso una combinación entre ambos. Consulta RStudio: Un único hogar para R y Python

 para obtener más información. Después de trabajar con R y RStudio, podrás aprender Python u otro lenguaje de programación de forma más intuitiva. 

Para tener una idea más clara de los lenguajes de programación más populares según el puesto de trabajo, consulta Formas de aprender sobre programación

. Este artículo enumera los lenguajes de programación que más usan los analistas de datos, los diseñadores web, los desarrolladores de aplicaciones web y para dispositivos móviles y los desarrolladores de videojuegos. Además, aporta enlaces a distintos recursos que te ayudarán a aprender más sobre esos lenguajes.   



<----------------------------------------------------------------------------------------------------------------------->

Video: Diviertete con R

Cuando comencé a aprender R, sus elementos visuales realmente me fascinaban. Todavía considero que es genial poder escribir un pequeño código, presionar un botón y listo, que aparezca una visualización de datos increíble. Antes de adentrarnos en los detalles, pensé que sería divertido que vieras un adelanto rápido de todo lo que R puede hacer. Lo que sigue será una vista previa de lo que aprenderás. Hacia el final de este curso, no solo comprenderás todo el código, sino que también podrás escribirlo y ejecutarlo. Por ahora, siéntate, relájate y disfruta del espectáculo. Comencemos por cargar una biblioteca y obtener un conjunto de datos para trabajar. Podemos utilizar el conjunto de datos de los pingüinos de Palmer, que incluye las mediciones de los tamaños de tres especies de pingüinos que viven en el archipiélago Palmer en la Antártida. Incluye datos sobre cuestiones como la masa corporal y la longitud de las aletas y del pico. Ese conjunto de datos tiene 344 filas de información ordenadas en ocho columnas. Los datos de los pingüinos de Palmer son populares entre los analistas y son geniales para explorar, visualizar y ver conceptos de enseñanza de manera divertida. Veremos más sobre este conjunto de datos más adelante en el curso. Digamos que queremos visualizar la relación entre la masa corporal y la longitud de las aletas. Quizás adivines que cuanto más grande es el pingüino, más largas son las aletas. Podemos comprobarlo si creamos un diagrama. Hagamos un diagrama de dispersión. Un diagrama de dispersión utiliza puntos para mostrar la relación entre dos variables. Entonces, las dos variables iban a comparar la masa corporal y la longitud de las aletas. No necesitas memorizar todos estos detalles en este momento. Más adelante tendrás tiempo de aprenderlos en más detalle. Echemos un vistazo a las partes de este código y a cómo se ajustan. La primera función comienza el diagrama. Si ejecutamos el código en este punto, lo único que obtendremos será un diagrama en blanco. Si agregamos una parte más del código, R pondrá etiquetas en cada acceso de nuestro diagrama y agregará líneas para los datos. La masa corporal está en el eje Y y la longitud de las aletas en el eje X, pero los puntos de datos aún no son visibles. Para obtener el diagrama completo, podemos agregar otra parte del código que le diga a R cómo representar nuestros datos. Por ejemplo, podríamos usar puntos, barras o líneas. Utilizaremos puntos para crear un diagrama de dispersión. Podemos avanzar más. Por ejemplo, podemos cambiar la forma en que se ve el diagrama. Cambiemos el color de todos los puntos a púrpura. Puedes presionar la flecha hacia arriba para buscar la última pieza del código que ejecutaste, así que haremos eso ahora. Y, luego, agregaremos color igual púrpura dentro de la función <i>geom point</i>. Ahora podemos presionar Enter para ejecutar el código. También podemos agregar nueva información al diagrama y usar color para destacarla. Pidámosle a R que asigne un color diferente a cada especie de pingüino. De esa forma, podemos vincular los puntos de datos con cada grupo de pingüinos. Los Papúa son los más grandes. La leyenda que se encuentra a la derecha del gráfico nos muestra que los puntos azules se refieren a los pingüinos de Papúa. R crea automáticamente una leyenda para el diagrama con el fin de ayudarnos a comprender el código de colores. R hace todo lo que le pides e, incluso, otras cosas que no le pediste. Es muy útil. También podemos usar formas para resaltar las diferentes especies de pingüinos. O podemos usar colores y formas. Además, para resaltar nuestros datos, también podemos reorganizarlos. Podemos desglosar nuestros datos en grupos más pequeños o en subconjuntos y crear un gráfico para cada subconjunto. Supongamos que queremos enfocarnos en los datos para cada especie. Las funciones de facetas nos permiten crear un diagrama separado para cada especie. Mira esto. Las facetas son geniales. Incluso podemos escribir texto en nuestro gráfico para señalar datos específicos o comunicar un mensaje. Pongámosle un título a nuestro gráfico para indicar su propósito con claridad. Por último, podemos guardar nuestro gráfico para que podamos acceder a él o compartirlo más adelante. Ahora, si hacemos clic en la pestaña Archivos, encontraremos nuestro archivo en la lista. Abrámoslo. Bueno, aquí finalizó el espectáculo. Espero que lo hayas disfrutado tanto como yo. Pudimos tomar un conjunto de datos grande y visualizar algunos patrones significativos de manera rápida. Esas son algunas de las funciones básicas en R. Es decir, es solo el comienzo. Es emocionante pensar en todas las formas en las que R puede ayudarte a descubrir todo el poder del análisis de datos. A medida que avanzas, aprenderás más sobre cada una de las funciones que usamos para crear nuestros diagramas. Al final de este curso, tú serás quien escriba y ejecute todos estos códigos. A continuación, aprenderemos un poco más sobre programación informática y cómo puede ayudarte a analizar tus datos.

<----------------------------------------------------------------------------------------------------------------------->

Video: Primeros pasos con R

El consejo que le daría a alguien que está aprendiendo R es que los errores son parte del proceso. Los errores y los mensajes de error son parte del proceso. Cuando pienso en las personas que son mejores que yo en R, pude darme cuenta de que no son necesariamente más inteligentes que yo, pero es probable que sean un poco más persistentes y que profundicen más en los temas. Desde luego, en comparación a cuando comencé; al principio veía un mensaje de error y pensaba: "Lo hice mal, listo, se acabó el juego". Ahora pienso: "Eso solo es parte del juego". Cuando comencé a exponerme un poco más a cómo se veía R, pensaba: "Se ve demasiado sofisticado. Si se ve así posiblemente sea muy difícil". Pero las personas que conocía y que lo utilizaban siempre eran muy entusiastas cuando hablaban de él y sentían que tenía muchas más ventajas que otro software que puedes utilizar para ejecutar análisis. Durante mucho tiempo antes de que utilizara R, solía usar hojas de cálculo o alguna otra herramienta, e intentaba hacerle modificaciones para lograr lo que necesitaba. A veces, usaba muchas herramientas porque una sola no podía hacer todo lo que yo quería que hiciera. Pero sentía que ya sabía cómo ejecutarlo y, no obstante, no tenía la suficiente fluidez. Cuanto más tiempo me expuse a R, más me di cuenta de todo lo que podría hacer de esa manera; puedo resolver todo con un solo programa que puede realizar interbloqueos con mucha fluidez. Al principio, no tenía demasiada confianza. Tuve un par de <i>scripts</i> donde algunos amigos eran mejores en R, personas con las que trabajaba, y que se sentaban y me ayudaban a avanzar y entender el código, y me sentía muy tonta si les hacía preguntas básicas del estilo "¿Por qué hay un corchete allí?" o "¿Por qué hacemos esto?". Pero, por suerte, tuvieron mucha paciencia conmigo. En algún momento, todo el departamento dijo que todos necesitábamos utilizar esta herramienta porque debíamos estar en la misma plataforma. Necesitamos coherencia en nuestros análisis. También necesitamos poder revisar en conjunto los análisis de los otros. Así que todos juntos tomamos un curso en línea y eso me ayudó a ganar mucha más confianza, porque estaba recorriendo paso a paso todo lo que necesitaba aprender, tenía una oportunidad para practicar y, luego, dije: "De acuerdo, incluso si hay cosas que no sé, ya he logrado pasar la introducción, y luego logré pasar el siguiente módulo, así que algo sé". Después, cuando empecé a utilizarlo en mi trabajo, todavía había situaciones en las que pensaba: "Un momento, no sé cómo resolver este problema". Y luego hablaba con un amigo, buscaba algo en Google y, en general, sabía mucho más de lo que pensaba que sabía, y así, de repente, desbloqueé mi capacidad para hacer un montón de análisis de manera rápida con un gran conjunto de datos, y también para realizar muchas visualizaciones de datos realmente rápido con ggplot2.



<----------------------------------------------------------------------------------------------------------------------->

Video: Lenguajes de programación

Anteriormente, aprendiste que programar significa darle instrucciones a una computadora para que realice una acción o un conjunto de acciones.

Incluso si esta es tu primera vez programando, ya tienes mucha experiencia diciéndole a una computadora qué hacer. Por ejemplo, quizás usaste una función de la hoja de cálculo para ordenar tus datos o realizar cálculos, o quizás utilizaste SQL para decirle a una computadora cómo extraer datos de una base de datos o unir dos tablas de datos diferentes. La programación va todavía más lejos. Tienes el mayor nivel de control sobre tus datos. SQL te permite comunicarte con bases de datos, pero un lenguaje de programación de uso general te permite crear tus propias aplicaciones y construir tus propias funciones desde cero. Para programar, primero necesitas conocer un lenguaje de programación. En este vídeo, aprenderemos los conceptos básicos sobre los lenguajes de programación y cómo pueden ayudarte a trabajar con tus datos. 

Los lenguajes de programación son las palabras y los símbolos que utilizamos para escribir instrucciones para que sigan las computadoras.

 Piensa en un lenguaje de programación como si fuera un puente que conecta a los humanos con las computadoras, y que les permite comunicarse. Los lenguajes de programación tienen su propio conjunto de reglas sobre cómo deben usarse esas palabras y esos símbolos, y se llama sintaxis. La sintaxis te muestra cómo organizar las palabras y los símbolos que ingreses para que tengan sentido para la computadora. Codificar es escribir instrucciones para la computadora utilizando la sintaxis de un lenguaje de programación específico. Así como hay varios lenguajes humanos en el mundo, hay muchos lenguajes de programación diferentes que están disponibles para comunicarse con las computadoras. Hay un lenguaje para casi cualquier cosa que quieras hacer, desde diseñar sitios web o desarrollar videojuegos, hasta trabajar con datos. Por ejemplo, Python es un lenguaje de uso general que sirve para todo tipo de cosas, desde trabajar con inteligencia artificial hasta crear experiencias de realidad virtual. Javascript funciona bien para desarrollar aplicaciones en línea y es una parte esencial de los navegadores web. Otros lenguajes de programación populares para el análisis de datos son SAS, Scala y Julia. A nivel personal, R es mi lenguaje preferido para el análisis de datos, pero es posible que quieras también explorar otros lenguajes. Aunque los lenguajes de programación puedan verse diferentes a primera vista, todos comparten estructuras y conceptos de codificación similares. Una vez que hayas aprendido tu primer lenguaje, te será más fácil aprender otros. A continuación, veremos todas las capacidades de R. Antes de pasar a eso, hablemos sobre algunos beneficios de utilizar cualquier lenguaje de programación para trabajar con datos. Destacaré tres. 

-> La programación te ayuda a aclarar los pasos de tu análisis, a ahorrar tiempo.
-> Te permite reproducir.
-> Compartir tu trabajo con facilidad. 

Empecemos con la claridad. Los lenguajes de programación tienen reglas y pautas específicas para dar instrucciones a una computadora. Cuando le indicas a una computadora qué hacer, tus instrucciones tienen que ser muy claras. No puede haber ninguna incoherencia en la forma en que escribes el código. Si la hay, el código no funcionará. Traducir tus pensamientos en códigos te obliga a determinar exactamente cómo escribir cada paso de tu análisis y cómo hacer para que los pasos encajen. Le da a tu análisis un nivel de precisión que lo hace realmente poderoso. Utilizar un lenguaje de programación para analizar datos también te ahorra un montón de tiempo. Por ejemplo, tomemos el proceso de limpieza y transformación de datos. Con una línea de código puedes crear un conjunto de datos separado sin perder ningún valor. Con otra línea, puedes aplicar varios filtros a tus datos. Eso te permite emplear menos tiempo para preparar tus datos y más tiempo para el análisis en sí. Por último, los lenguajes de programación facilitan la reproducción de tus análisis. El análisis de datos es más útil cuando puedes reproducir tu trabajo y compartirlo con otras personas. Ellas pueden volver a revisarlo y ayudarte a resolver problemas. El código almacena automáticamente todos los pasos de tu análisis para que puedas reproducirlo y compartir tu trabajo en cualquier momento a futuro, ya sean semanas, meses o incluso años después. Aquí hay un ejemplo. Supongamos que estás trabajando en un proyecto. Ya recopilaste y limpiaste tus datos y comenzaste con el análisis, pero los resultados no se suman. Sospechas que hubo un error durante el proceso. Te gustaría hablar sobre el problema con un compañero de equipo y escuchar sus comentarios. Si utilizaste una hoja de cálculo, es posible que ambos tengan que rehacer todo el análisis para descubrir el error. No hay una forma fácil de registrar y reproducir tus pasos en una hoja de cálculo; pero si utilizas un lenguaje de programación, puedes reproducir y compartir todo tu trabajo en un momento, desde la carga de datos y la elaboración de visualizaciones, hasta la creación de los informes con los resultados. Además, puedes actualizar tu análisis con facilidad y arreglar cualquier error fácilmente al cambiar el código. Espero que eso te permita comprender mejor de qué se tratan los lenguajes de programación. A continuación, vamos a centrarnos detalladamente en R.

____________________________________________

Los lenguajes de programación se pueden usar para reproducir y compartir tu análisis. 

<----------------------------------------------------------------------------------------------------------------------->

Formas de aprender a programar

La experiencia de escribir un código en un lenguaje de programación puede ser emocionante y gratificante. Desde siempre, en el sector de programación, las personas se ayudan entre sí para mejorar sus habilidades y desarrollar mejores prácticas. En este curso, vas a aprender específicamente sobre el lenguaje de programación R, pero, más adelante, quizá quieras enfocarte en otros lenguajes según tus intereses y objetivos profesionales. Esta lectura constituye una guía general para ayudarte a decidir cuáles son los lenguajes de programación que mejor se ajustan a tus necesidades.

Lenguajes de programación populares según la profesión 

Repasemos algunos de los puestos laborales que quizá encuentres en el sector y los lenguajes de programación que más usan esos profesionales. Además, incluimos una lista de recursos adicionales para que explores y aprendas más sobre cada uno de los lenguajes de programación que te presentamos.
Analista de datos

Un analista de datos se encarga de recopilar, transformar y organizar los datos para sacar conclusiones, hacer predicciones e impulsar la toma de decisiones fundamentada. Los lenguajes de programación que más usan los analistas de datos son R y Python. 

R ofrece a los analistas de datos funciones prácticas para estadística, y es útil para crear visualizaciones de datos avanzadas. Consulta estos recursos para obtener más información sobre R:

    El proyecto R para cálculos estadísticos

: Sitio web para descargar R, documentación y artículos de soporte

Manuales de R

: Enlaces a manuales del equipo del núcleo de R, que incluyen presentación, administración y ayuda

Tutoriales de R del club de programación

: Recopilación de tutoriales de programación con R

R para principiantes

    : Una guía de primeros pasos para trabajar con datos, gráficos y estadísticas en R

Python es un lenguaje de uso general que puedes usar para crear lo que necesites para tu análisis de datos. A continuación, detallamos algunos recursos para que empieces a aprender Python:

    La Fundación del Software Python (PSF)

: Sitio web con guías que te ayudan a dar tus primeros pasos 

Tutorial Python

: Tutorial de Python 3 del sitio de PSF

Tutoriales de Python del club de programación

    : Recopilación de tutoriales de programación con Python

Diseñador web

Los diseñadores web se encargan de diseñar y darle estilo a las páginas web que contienen texto, gráficos y videos. Por lo general, usan Lenguaje de marcas de hipertexto v5 (HTML5) y Hojas de estilo en cascada (CSS) para crear sitios web. 

HTML5 brinda la estructura de las páginas web y se usa para vincularse con plataformas de hosting. Usa estos recursos para obtener más información sobre HTML5 y CSS:

    Tutorial de HTML

: Introducción a HTML, con enlaces a funciones, ejemplos y referencias de HTML5

Hoja de referencia de HTML5

: Resumen útil de etiquetas y atributos de HTML5 y su compatibilidad con HTML4

Curso de conceptos básicos de HTML5 y CSS

    : Curso gratuito de W3C en edX; por 199 dólares, podrás obtener un certificado verificado que acredite que realizaste el curso 

CSS se usa para diseño de páginas web y elementos de gráficos de control (color, diseño y fuente), así como presentaciones de páginas en distintos dispositivos (pantallas grandes, pantallas de dispositivos móviles e impresoras). Explora estas hojas de referencia sobre CSS:

    Hoja de referencia interactiva de CSS

: Incluye las partes más comunes de CSS, incluido gradiente, fondo, familia de fuentes, bordes y mucho más

Las 50 mejores hojas de referencia de HTML y CSS

    : Lista con 50 hojas de referencia; elige las que te sean más útiles

Desarrolladores de aplicaciones para dispositivos móviles

Los desarrolladores de aplicaciones para dispositivos móviles usan la programación para crear aplicaciones para computadoras portátiles, dispositivos móviles y tabletas. Los lenguajes de programación que más usan son Swift, Java y C#.

Swift (para plataformas de Apple) es un lenguaje de scripts de código abierto para macOS, iOS, watchOS y tvOS. Su objetivo principal es lograr que las aplicaciones funcionen con más rapidez. Para más información sobre Swift, explora estos recursos:

    Swift.org

: Comunidad de código abierto que contiene recursos para aprender a usar Swift; incluye videos y códigos de muestra

Sitio para desarrolladores que usan Swift

: Sitio web para desarrolladores de Apple que contiene información para quienes quieran usar Swift 

Recursos para el desarrollo con Swift

    : Colección de documentos, códigos de muestra, videos y libros recomendados de Apple 

Java (para dispositivos de Android) es el lenguaje oficial de programación para desarrollo de Android. El artículo Quiero desarrollar aplicaciones para Android: ¿Qué lenguajes debería aprender?

 explora otros lenguajes que se usan para desarrollo en Android. Consulta estos recursos sobre Java:

    Android Studio

: Entorno de desarrollo integrado (IDE) descargable que contiene herramientas para desarrollar aplicaciones para dispositivos Android

Desarrolla tu primera aplicación para Android con Java

: Instrucciones para instalar Android Studio y crear tu primera aplicación

Tutorial de Java para principiantes: Escribe una aplicación simple sin necesidad de tener experiencia

    : Resumen de cómo aprender Java; contiene ejemplos

C# (que se pronuncia "sí sharp") es un lenguaje de programación orientado al objeto que se usa mucho para crear juegos y aplicaciones móviles en la plataforma de desarrollo de código abierto .NET. Xamarin amplía la plataforma .NET gracias a un framework para que los desarrolladores creen aplicaciones móviles para distintas plataformas, tanto en iOS como en Android. A continuación, tienes algunos recursos para ayudarte a aprender C#:

    Materiales de Microsoft .NET para aprender C#

: Incluye cursos, tutoriales y videos gratuitos para aprender el lenguaje de programación C#

Materiales de Microsoft para aprender Xamarin

: Incluye cursos, tutoriales y videos gratuitos para aprender sobre desarrollo móvil con Xamarin

Tutorial sobre Xamarin: Desarrolla tu primera aplicación para iOS o Android usando C#

: Instrucciones para desarrollar una aplicación móvil que muestre el texto "Hola mundo"

Aprender C# en Codecademy

    : Sitio web con lecciones interactivas básicas y gratuitas, así como actividades extra a las que puedes acceder mediante una suscripción mensual

Desarrolladores de aplicaciones web

Los desarrolladores de aplicaciones web diseñan y desarrollan aplicaciones de redes que se usan en la web. Los lenguajes de programación que más usan son Java, Python, Ruby y PHP.

Java se usa ampliamente para crear aplicaciones web de empresas que pueden ejecutarse en múltiples clientes. Una de las fortalezas principales de Java es su enfoque de "escribir una vez, ejecutar en cualquier lado" (WORA). Para más información sobre Java, explora estos recursos:

    Tutoriales de Oracle sobre Java

: Tutoriales sobre Java incluidos en los documentos de Oracle

Java para principiantes

    : Curso gratuito de Java para principiantes en el sitio web "Home and Learn"

Python es un lenguaje de programación de uso general. Explora los recursos de Python que se enumeran en la sección del analista de datos.

Ruby es un lenguaje de programación de uso general orientado a objetos para el desarrollo de aplicaciones web. Ruby no es lo mismo que Ruby on Rails, que es un framework de aplicación web de código abierto que se ejecuta usando Ruby. Consulta estos recursos para obtener más información sobre Ruby: 

    Noticias sobre Ruby

: Información sobre los últimos lanzamientos de Ruby y enlaces a otros recursos

Documentación de Ruby

: Incluye guías, tutoriales y material de referencia para ayudarte a aprender más sobre Ruby

Guía para programadores de Ruby

: Tutorial y guía de referencia para Ruby

Aprender Ruby en Codecademy

    : Sitio web con lecciones interactivas básicas y gratuitas, así como actividades extra a las que puedes acceder mediante una suscripción mensual

PHP es un lenguaje de scripts que es particularmente útil para desarrollo de aplicaciones web. Está basado en Perl, otro lenguaje de programación. PHP es simple, flexible y relativamente fácil de aprender. Consulta estos recursos para obtener más información sobre PHP:

    Archivos descargables y documentos sobre PHP

: Información sobre los últimos lanzamientos de PHP y enlaces a otros recursos

PHP bien ejecutado

: Referencia rápida para estándares populares de programación con PHP

Tutorial interactivo de PHP

    : Tutorial gratuito que ejecuta códigos PHP en distintos ejercicios

Desarrollador de videojuegos

Los desarrolladores de videojuegos son desarrolladores de aplicaciones que se dedican específicamente a crear videojuegos. Los lenguajes de programación que más usan son C# y C++.

C# es un lenguaje de programación orientado a objetos que se usa mucho para crear videojuegos. Explora los recursos de C# que se enumeran en la sección de desarrolladores de aplicaciones para dispositivos móviles.

C++ es una extensión del lenguaje de programación C que también se usa para crear juegos de consola, como los juegos para Xbox. Explora los siguientes enlaces para más información sobre C++:

    Recursos de Microsoft para C++

: Aprende a instalar el IDE de Visual Studio y escribir códigos usando C++

Códigos de muestra de Microsoft C++ y C# para videojuegos

: Recurso con más de 40 códigos de muestra de C++ y C# para videojuegos 

Tutorial interactivo de C++

    : Tutorial gratuito que ejecuta códigos C++ en distintos ejercicios

Consejos para aprender lenguajes de programación

A continuación, te dejamos algunos consejos para tener en cuenta cuando empiezas a aprender un nuevo lenguaje de programación:

    Establece un proyecto de práctica y usa el lenguaje para completarlo. Así, el proceso de aprendizaje es más práctico e interesante.  

    No olvides conceptos y principios de programación que ya hayas aprendido. Muchos pueden usarse con distintos lenguajes de programación. Así que, después de aprender un lenguaje, aprender un segundo o tercero suele ser mucho más simple. 

    Crea y mantén notas y hojas de referencia útiles en cualquier formato que te resulte práctico (a mano o en computadora).

    Crea un sistema de archivado en línea para poder acceder a la información que necesites de modo fácil mientras trabajas en distintos entornos de programación.

<----------------------------------------------------------------------------------------------------------------------->

De las hojas de cálculo a SQL y, luego, a R

Si bien puede que no conocieras el lenguaje de programación R, se parece mucho a otras herramientas que ya exploraste en este programa. En esta lectura, compararás los programas de hojas de cálculo, SQL y R para entender mejor cómo usar cada uno a futuro.

Hojas de cálculo, SQL y R: Comparación entre los tres

Como analista de datos, hay muchas probabilidades de que, en algún momento de tu carrera profesional, trabajes con SQL, R y hojas de cálculo. Cada herramienta tiene sus ventajas y desventajas, pero todas facilitan el proceso de análisis de datos y lo hacen más eficiente. Las tres herramientas tienen dos aspectos importantes en común:

    Todas usan filtros: Por ejemplo, puedes filtrar un conjunto de datos sin problemas usando alguna de estas herramientas. En R, puedes usar la función de filtro. Así, puedes llevar a cabo la misma tarea que con una consulta básica de SELECT-FROM-WHERE en SQL. En una hoja de cálculo, puedes crear un filtro usando las opciones del menú.

    Todas usan funciones: En las hojas de cálculo, usas funciones en fórmulas y, en SQL, las incluyes en las consultas. En R, usarás funciones en el código que forma parte de tu análisis.

La siguiente tabla incluye preguntas clave para explorar algunas otras comparaciones entre las tres herramientas. Úsala como guía general para empezar a explorar R. 

<----------------------------------------------------------------------------------------------------------------------->

Video: Introduccion a R

Ahora que ya hemos hablado sobre lenguajes de programación en general, vamos a conocer R. 

¿Qué es R? R es un lenguaje de programación que se usa con frecuencia para análisis estadísticos, visualización y análisis de datos. 

Más adelante, realizarás un recorrido por RStudio, que es un entorno de software popular para el lenguaje R. En este vídeo, analizaremos las características y las funciones principales de R, y sus ventajas para el análisis de datos. R es genial. Me alegra que vayas a conocerlo. R está basado en otro lenguaje de programación denominado S. En la década de 1970, John Chambers creó S para uso interno en Bell Labs, una famosa planta de investigación científica. En la década de 1990, Ross Oaxaca y Robert Gentleman desarrollaron R en la Universidad de Auckland, Nueva Zelanda. Lo llamaron R porque con esa letra empiezan los nombres de sus dos autores y para jugar con el nombre de una sola letra, como el de su predecesor, S. A partir de entonces, R se ha convertido en el lenguaje de programación preferido de los científicos, los estadísticos y los analistas de datos en todo el mundo. Hay muchas razones por las que las personas que trabajan con datos aman R. Quiero compartir cuatro de ellas contigo. R es accesible, está centrado en los datos, es de código abierto y tiene una comunidad activa de usuarios. En primer lugar, R es un lenguaje accesible para principiantes. Muchas personas que no tienen un lenguaje de programación específico aprenden R. Yo debería saberlo. Soy una de ellas. R realmente atrae a cualquiera que quiera resolver problemas relacionados con los datos. Y ese es uno de los aspectos tan geniales sobre R. Todo se relaciona con los datos. R es lo que se conoce como un lenguaje de programación centrado en los datos. Se diseñó específicamente para facilitar el análisis de datos, y hacerlo más eficiente y más poderoso. Otro aspecto increíble de R es que es de código abierto. 

Código abierto
Eso significa que el código está libremente disponible y puede ser modificado y compartido por las personas que lo usan. 

Hagamos una pausa y veamos lo increíble que es esto. En primer lugar, cualquiera puede usar R gratis. En segundo lugar, cualquiera puede modificar el código, arreglar errores y mejorarlo. De hecho, con el correr de los años, muchos programadores excelentes hicieron mejoras y arreglos al código de R. Por ejemplo, cualquiera que conozca el lenguaje R puede crear lo que se conoce como paquete complementario. Más adelante, profundizaremos en los paquetes de R. Por ahora, solo debes saber que literalmente existen cientos de paquetes de R, y todos fueron creados por personas que querían resolver problemas específicos. Muchos de esos paquetes son muy útiles para los analistas de datos. Como usuario de R, ahora disfrutas el beneficio del conocimiento compartido. Y déjame agregar que la comunidad de R es la mejor. Esa comunidad dinámica, diversa y accesible es muy solidaria con los nuevos estudiantes. Puedes conectarte en cualquier momento para buscar respuestas a todas tus preguntas relacionadas con R. Visita sitios web como R for Data Science Online Learning Community y RStudio Community. Además de eso, los usuarios de R están en Twitter y en otras redes sociales. Descubrirás muchos recursos para hacer contactos profesionales, asesorar y aprender. Ahora que sabemos más sobre los beneficios generales de R, hablemos de algunas situaciones específicas en las que podrías utilizarlo para el análisis de datos. Aquí tenemos tres escenarios: reproducir tu análisis, procesar muchos datos y crear visualizaciones de datos. En primer lugar, R puede guardar y reproducir cada paso de tu análisis. Antes vimos que el análisis de datos es más útil cuando puedes reproducir tu trabajo con facilidad y compartirlo con otros. En R, reproducir tu análisis es tan fácil como presionar un botón en tu teclado. Tu código lo guarda para siempre. Y puedes compartirlo con cualquiera en cualquier momento. Procesar muchos datos también es algo que R hace muy bien, al igual que SQL. Como ya aprendiste antes, las hojas de cálculo organizan proyectos en hojas o pestañas. Si alguna vez tuviste que lidiar con archivos en hojas de cálculo que tienen muchas hojas o muchos datos en cada hoja, sabes que las cosas pueden comenzar a funcionar muy lentamente. Trabajar con muchos datos en una hoja de cálculo incluso puede causar colapsos. R puede manejar muchas cantidades de datos de manera más rápida y eficiente. Por último, R puede crear elementos visuales poderosos y tiene capacidades gráficas de última generación. Como has visto en este programa, las herramientas como las hojas de cálculo y Tableau ofrecen muchas opciones para visualizar tus datos. R está a otro nivel. Con solo un código breve puedes crear histogramas, diagramas de dispersión, diagramas de línea y mucho más. Y ese es solo el comienzo. Si trabajas con paquetes más avanzados, puedes realizar visualizaciones de datos realmente impresionantes. Aprender R es un gran beneficio para cualquiera que esté interesado en convertirse en analista de datos. Como mencioné anteriormente, saber R te ayudará a resaltar como candidato para un trabajo. A medida que sigas avanzando, R te ayudará a encontrar soluciones para problemas más complejos relacionados con datos. Puedes seguir aprendiendo sobre R a lo largo de tu carrera profesional como analista de datos. No hay límites cuando se trata de desarrollar tus habilidades de análisis de datos. Eso es todo por ahora. A continuación, veremos el entorno de RStudio juntos. Antes de utilizar RStudio, tienes que descargar e instalar la interfaz básica de R. Aprenderás cómo hacerlo en una próxima lectura. La mayoría de los analistas que trabajan con lenguaje R utilizan el entorno RStudio para interactuar con R, y no la interfaz básica. Por eso, nos estamos enfocando en RStudio en este programa. A continuación de este vídeo, encontrarás los recursos para descargar R y RStudio en caso de que estés interesado en aprender más.

<----------------------------------------------------------------------------------------------------------------------->

Video: Introduccion a RStudio

Es hora de hacer el recorrido por RStudio. Los ejemplos que veremos son de RStudio Cloud, pero RStudio funciona de manera similar en todas las plataformas. Así que siéntete libre de usar la plataforma con la que estés más cómodo. Más adelante, si quieres aprender más, encontrarás los recursos para descargar e instalar RStudio en tu dispositivo. 

RStudio es un IDE o entorno de desarrollo integrado. Eso significa que RStudio reúne todas las herramientas que podrías querer usar en un solo lugar. 

La consola de R que vimos anteriormente forma parte de este entorno. RStudio también incluye un editor para escribir códigos y herramientas para gestionar tus datos y crear elementos visuales. RStudio se creó específicamente para utilizarse con R. Te ayudará a maximizar tu productividad como analista de datos. Analizar datos es como conducir un automóvil. Puedes imaginar que R y RStudio son partes diferentes del automóvil. R sería el motor. RStudio sería el acelerador, el volante y el tablero, todo en uno. Te permite decirle al motor qué hacer y te ayuda a llegar al lugar que quieres. Así como un velocímetro y un sistema de navegación facilitan la conducción, el entorno de RStudio facilita el uso de R. En una lectura anterior aprendiste a acceder a RStudio. Así que iniciemos sesión en RStudio y exploremos. El entorno de RStudio tiene cuatro ventanas principales denominadas paneles. Cada panel te ayuda a realizar distintas funciones. La primera vez que abres RStudio verás tres paneles. El cuarto panel está oculto por defecto, pero puedes abrirlo con facilidad. Solo haz clic en Archivo, dentro de menú, y luego selecciona Archivo Nuevo y R Script. RStudio tiene muchos atajos de teclado. Para aprender más, echa un vistazo a Ayuda de atajos de teclado. Puedes hacer que los paneles se vean más pequeños o más grandes si haces clic en los botones para minimizar o maximizar que se encuentran en la parte superior derecha de cada panel. También puedes hacer clic y arrastrar los bordes de los paneles para ajustar sus tamaños. Haz clic en el botón Paneles para ver más opciones de funciones. Ahora que tenemos los cuatro paneles abiertos exploremos cada uno de ellos. Comenzaremos en la esquina inferior izquierda y nos moveremos en el sentido de las agujas del reloj. Quizás reconozcas la consola de R de una lectura anterior. Para repasar rápidamente, la consola es el lugar desde donde le das órdenes a R. Por ejemplo, podemos pedirle a R que nos muestre un resumen de los datos de los pingüinos que utilizamos en un vídeo anterior para crear elementos visuales. Tendrás que instalar y cargar el conjunto de datos de los pingüinos de Palmer si todavía no lo has hecho. Arriba de la consola, en la parte superior izquierda, se encuentra el panel de editor de código fuente. Utilizarás el editor de código fuente cuando trabajes con R Scripts. Hay dos maneras principales de escribir códigos en RStudio: utilizando la consola o utilizando el editor de código fuente. Puedes escribir comandos directamente en la consola, pero desaparecerán cuando cierres la sesión en curso. Como hemos comentado, es importante poder reproducir y compartir todos los pasos de tu análisis. Si guardas tu script en el editor, puedes volver a acceder a tu trabajo en cualquier momento y mostrar a otros cómo lo hiciste. El editor de código fuente y la consola también trabajan en conjunto en RStudio. Cuando ejecutas el código en el editor, el código automáticamente aparece en la consola. Si estás trabajando en un análisis largo, eso facilita la ejecución de todo el código al mismo tiempo o de algunas secciones específicas a medida que avanzas. Ejecutemos una parte del código en el editor para verificarlo. Consejo profesional: Recuerda que R distingue mayúsculas y minúsculas. Aquí utilizamos una V mayúscula para la función View. 

Luego, vamos al panel Entorno (panel de entorno), en la parte superior derecha. Aquí encontrarás todos los datos que has cargado en este momento y podrás organizarlos y guardarlos. Por ejemplo, si importas datos de una hoja de cálculo, estará visible en el panel Entorno. Puedes ver cada objeto en el panel Entorno si haces clic sobre él. También puedes alternar entre una vista de Lista y una vista de Cuadrícula. A la derecha de la pestaña Entorno encontrarás la pestaña Historial. Todos tus comandos anteriores están guardados aquí, y es fácil encontrarlos y volver a ejecutarlos. Encontrarás la línea de código más reciente al final de la lista. Puedes copiar cualquier línea a la consola de comando si haces doble clic sobre ella. En la parte inferior derecha, verás un panel que tiene las pestañas Archivos, Diagramas, Paquetes y Ayuda. La pestaña Archivos te permite acceder a tu directorio de archivos y muestra los contenidos de la carpeta de trabajo en uso. Puedes encontrar y gestionar todos tus archivos con facilidad y crear nuevas carpetas de proyectos. Luego está la pestaña de Diagramas. Si creamos un diagrama, los resultados aparecen aquí. Por ejemplo, podemos crear un diagrama de dispersión con el conjunto de datos de los pingüinos que usamos antes. Más adelante aprenderás más sobre cómo crear diagramas en RStudio. Anteriormente hablamos sobre los paquetes de R, que son soluciones personalizadas a problemas de datos que tuvieron los usuarios de R. RStudio te permite acceder a la biblioteca de los paquetes de R, conocida como Tidyverse. Puedes actualizar, instalar y gestionar tu biblioteca desde el panel Paquetes. Los paquetes cargados en tu sesión actual tienen marcas de verificación. Más adelante, exploraremos el paquete tidyverse en más detalle. Por último, haz clic en la pestaña Ayuda. Aquí puedes encontrar recursos útiles para R y RStudio. Hay muchos recursos allí que te ayudarán a responder todas tus preguntas. Asegúrate de aprovecharlos. Ese fue nuestro recorrido por RStudio. Pero este es solo el comienzo de lo que RStudio puede hacer. Pronto explorarás RStudio en más detalle. Hablando como profesional de los datos, me encanta trabajar en RStudio. Hace que mi trabajo sea mucho más fácil, más rápido y mejor. Felicitaciones por finalizar otro paso en tu proceso de aprendizaje para convertirte en un analista de datos. A continuación, veremos algunos conceptos básicos de programación. Luego, empezaremos a trabajar con R. Para aquellos que son nuevos en programación, están a punto de escribir sus primeras líneas de código.

_____________________________________________

Cuándo usar RStudio

Como analista de datos, tendrás muchas herramientas a disposición para trabajar en cada etapa de tu análisis. Algunas veces, podrás cumplir tus objetivos usando un programa de hoja de cálculo o SQL con una base de datos. En esta lectura, repasarás algunas situaciones en las que quizá sea mejor trabajar en R con RStudio. 

¿Por qué usar RStudio?

Una de tus tareas básicas como analista consistirá en convertir datos sin procesar en información precisa, útil e interesante. Esto puede ser difícil si los datos sin procesar son complejos. R y RStudio se diseñaron para manejar grandes conjuntos de datos que quizá las hojas de cálculo no pueden gestionar tan bien. RStudio también te facilita la tarea de reproducir tu trabajo en distintos conjuntos de datos. Cuando ingresas tu código, es fácil cargar un nuevo conjunto de datos y ejecutar tus scripts de nuevo. También puedes crear visualizaciones más detalladas en RStudio. 
El mejor momento de RStudio

Cuando los datos están diseminados en muchos grupos o categorías, puede ser difícil gestionar tu análisis, visualizar tendencias y generar gráficos. Cuantos más grupos de datos necesites para trabajar, más difíciles serán esas tareas. Es allí donde RStudio puede ser útil.

Por ejemplo, supongamos que estás analizando datos de ventas para cada ciudad de cierto país. Son muchos datos de muchos grupos distintos. En este caso, cada ciudad tiene su propio grupo de datos. 

A continuación, te contamos algunas formas en las que RStudio puede ayudarte en esa situación:

    Cuando usas RStudio, es más fácil llevar a cabo algún paso específico del análisis en cada grupo usando un código básico. En este ejemplo, podrías calcular los datos de ventas promedio anuales en cada ciudad. 

    RStudio también te permite crear visualizaciones flexibles de datos. Puedes visualizar diferencias entre ciudades de forma efectiva usando funciones de trazado, como las facetas, que verás más en detalle más adelante.

    También puedes usar RStudio para crear automáticamente un archivo de salida con estadísticas de resumen o, incluso, tus gráficos visualizados para cada grupo.

A medida que aprendas más sobre R y RStudio en este programa, comprenderás más en detalle cuándo deberías recurrir a RStudio para el análisis de datos.
Para obtener más información

    Las ventajas de RStudio

    : Esta página web explica algunas de las razones por las que RStudio es la opción preferida de muchos analistas para interactuar con R. Conocerás las ventajas de usar RStudio para el análisis de datos, desde su facilidad de uso hasta la accesibilidad de los gráficos y mucho más. 

    Análisis de datos y programación con R

: Esta introducción en línea al análisis de datos y la programación en R constituye un buen punto de partida para usuarios de R y RStudio. También incluye una lista de explicaciones detalladas sobre las ventajas de usar R y RStudio. Además, encontrarás una guía útil para configurar RStudio.


<----------------------------------------------------------------------------------------------------------------------->

Conectarte con otros analistas de datos en la comunidad R

R es una herramienta poderosa de tu kit para el análisis de datos, y también cuenta con una comunidad fuerte de usuarios que tienen ganas de compartir, trabajar en conjunto y conectarse con otras personas. Esta lectura te detallará algunos lugares para empezar a conectarte con otros analistas de la comunidad de R, ya sea en línea o cara a cara.

Comunidades en línea

Las comunidades en línea sirven para conectarte con otros usuarios de R aunque vivas lejos. Esta lista incluye foros y canales de debate para unirte a la conversación. También incluye etiquetas de redes sociales que puedes usar para conectarte con otros analistas de datos en las plataformas de redes sociales que ya usas. 

    RStudio Community:

 El foro RStudio Community es un excelente lugar para obtener ayuda y encontrar soluciones para los desafíos que propone R. ¡Quizá hasta puedas ayudar a otros también!

r/RLanguage

: La comunidad subreddit del lenguaje R es una comunidad activa en línea alojada en la plataforma de redes Reddit. Los usuarios de R acuden a esta comunidad para conversar sobre R, hacer preguntas y compartir consejos. 

rOpenSci

: rOpenSci tiene un foro comunitario en el que los usuarios de R pueden hacer preguntas y buscar soluciones. También incluye enlaces a las guías de mejores prácticas y páginas de soporte. 

Comunidad de aprendizaje en línea de R4DS y canal Slack:

 Comunidad con otro canal de Slack donde quienes aprenden a programar en R y también los mentores pueden juntarse y conectarse. Es un excelente lugar para conversar sobre cómo usar R para la ciencia de datos. 

Twitter #rstats

    : Si usas Twitter, puedes conectarte con otros usuarios de R con el hashtag #rstats. Muchos desarrolladores y analistas que usan R están muy activos en Twitter. 

Reuniones

Muchas organizaciones llevan a cabo reuniones en línea o en persona para los usuarios de R. Recuerda siempre ser cauteloso y prudente al asistir a esas reuniones en persona. 

    Reuniones locales sobre análisis computacional de datos:

 Estas reuniones son perfectas para conocer a otras personas interesadas en el análisis computacional de datos y para hacer contactos. Estas reuniones se organizan por locación, así que puedes conectarte con otros analistas de datos de tu zona. 

Grupos de usuarios de R:

 Esta lista contiene enlaces a las comunidades regionales de R, incluidos subreddits y grupos de reunión. Es un recurso útil si te interesa encontrar a otros usuarios de R por tu zona. 

Reuniones de RLadies:

     Reuniones virtuales y en persona que se organizan específicamente para aficionados a R que se autoperciben como pertenecientes a grupos minoritarios o marginalizados. Estas reuniones también se organizan por locación, así que puedes conectarte con otros analistas de datos de tu zona. 

R puede ser difícil de aprender pero, por suerte, existe una comunidad sólida de usuarios de R que buscan trabajar en conjunto y ayudarse entre sí. Estos recursos constituyen un buen punto de partida si quieres empezar a conectarte con una comunidad más grande de analistas de datos. ¡Aprovéchala! 

<----------------------------------------------------------------------------------------------------------------------->